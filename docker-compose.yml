version: "3.8"
services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: keycloak
    networks:
      - mysql
    restart: unless-stopped
  keycloak:
    image: quay.io/keycloak/keycloak:20.0.0
    environment:
      KC_DB: mysql
      KC_DB_SCHEMA: keycloak
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data/
    command:
      - "start-dev"
    networks:
      - mysql
    depends_on:
      - mysql
    restart: always

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - elastic
    restart: unless-stopped

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.5.3
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf
    command:
      - "logstash -f /etc/logstash/conf.d/logstash.conf"
    networks:
      - elastic
    depends_on:
      - elasticsearch
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.5.3
    ports:
      - "5601:5601"
    networks:
      - elastic
    restart: unless-stopped
    depends_on:
      - elasticsearch
volumes:
  mysql_data:
  keycloak_data:
  es_data:
networks:
  mysql:
    driver: bridge
  elastic:
    driver: bridge
